library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity reg_file is
    port
    ( D1,D2       : out std_logic_vector(15 downto 0);-----output of RF (data read)
      D3          : in  std_logic_vector(15 downto 0);	----- data write
      write_en 	: in  std_logic;
      reset    	: in  std_logic;
      A1,A2,A3    : in  std_logic_vector(2 downto 0);--- I1,I2 ADDRESS of data out, I3 address of data in 
      clk         : in  std_logic );
end reg_file;

architecture behave of reg_file is
	type R is array(0 to 7) of std_logic_vector(15 downto 0); 
    --Eight 16-bit registers R(0) to R(7)
    signal registers : R := (others => (others => '0') ) ;
    
    begin
    
        regFile: process(clk,reset,write_en,I3)
        begin
                
                if (reset = '1') then
                registers <= (others => (others => '0') ) ;
                elsif rising_edge(clk) and (write_en = '1') then 
                        registers(to_integer(unsigned(I3))) <= O3;
                end if ;
    
        end process;
        O1 <= registers(to_integer(unsigned(I1))); 
        O2 <= registers(to_integer(unsigned(I2)));
    
	end behave;